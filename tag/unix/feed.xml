<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel>
        <title>Daniel Duan - Unix</title>
        <link>https://duan.ca/tag/Unix/</link>
        <atom:link href="https://duan.ca/tag/Unix/index.xml" rel="self" type="application/rss+xml" />
        
        
            
        
            
        
            
        
            
        
            
            <item>
                <title>Unix File Permissions In Swift</title>
                <description>&lt;p&gt;Wrap file permissions from &lt;code class=&quot;highlighter-rouge&quot;&gt;stat&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;chmod&lt;/code&gt; in an &lt;code class=&quot;highlighter-rouge&quot;&gt;OptionSet&lt;/code&gt; in Swift.&lt;/p&gt;

&lt;div class=&quot;video-container&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube.com/embed/1ZrouR_F-AU&quot; frameborder=&quot;0&quot; gesture=&quot;media&quot; allow=&quot;encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
                <pubDate>Sun, 06 May 2018 16:43:20 -0700</pubDate>
                
                <link>https://duan.ca/2018/05/06/unix-file-permissions-in-swift/</link>
                
                <guid isPermaLink="true">https://duan.ca/2018/05/06/unix-file-permissions-in-swift/</guid>
            </item>
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
            <item>
                <title>Building 'pwd' Under 1 Minute In Swift</title>
                <description>&lt;p&gt;I guess I’m starting a series of minute-long videos. In this first video, I built &lt;code class=&quot;highlighter-rouge&quot;&gt;pwd&lt;/code&gt; out of &lt;code class=&quot;highlighter-rouge&quot;&gt;getcwd&lt;/code&gt;. The
code turned out shorter than I imagined (1 line). Which is a good demonstration of Swift’s great C-interop
capability.&lt;/p&gt;

&lt;div class=&quot;video-container&quot;&gt;
    &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/YR4MCcMnHrI&quot; frameborder=&quot;0&quot; gesture=&quot;media&quot; allow=&quot;encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Some details are lost in this video, however. For example&lt;a class=&quot;backlink&quot; rel=&quot;canonical&quot; title=&quot;From duan.ca&quot; href=https://duan.ca/2017/12/27/building-pwd-under-1-minute-in-swift/&gt;,&lt;/a&gt; the POSIX standard actually says &lt;code class=&quot;highlighter-rouge&quot;&gt;getcwd&lt;/code&gt;’s 2nd
argument being &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; is undefined. Luckily, both macOS and Linux define it the way we want (allocate as much
memory as needed). Swift’s handling of &lt;code class=&quot;highlighter-rouge&quot;&gt;char *&lt;/code&gt; aka &lt;code class=&quot;highlighter-rouge&quot;&gt;UnsafeMutablePointer&amp;lt;CChar&amp;gt;&lt;/code&gt; in context of a &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; array
is also very cool.&lt;/p&gt;
</description>
                <pubDate>Wed, 27 Dec 2017 01:13:07 -0800</pubDate>
                
                <link>https://duan.ca/2017/12/27/building-pwd-under-1-minute-in-swift/</link>
                
                <guid isPermaLink="true">https://duan.ca/2017/12/27/building-pwd-under-1-minute-in-swift/</guid>
            </item>
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
    </channel>
</rss>
